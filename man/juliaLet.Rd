% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.R
\name{juliaLet}
\alias{juliaLet}
\title{Evaluate Julia expressions in a `let` block, using R variables}
\usage{
juliaLet(expr, ...)
}
\arguments{
\item{expr}{a Julia expression which may contain}

\item{...}{the arguments to use in the let block. The names are}
}
\description{
R variables can be passed as named arguments, which are inserted
for those variables in the Julia expression that have the same name
as the named arguments.
Returns the value of the `let` block, translated back to R.
}
\details{
Note that, as the evaluation is done in a `let` block, changes to
global variables in the Julia session are only possible by using
the keyword `global` in front of the Julia variables.
}
\examples{
# Assign a global variable (although not recommended for a functional style)
juliaLet("global x = xval", xval = rnorm(10))
juliaEval("x")

juliaLet('[1 => x, 17 => y]', x = rnorm(1), y = rnorm(2))
}
