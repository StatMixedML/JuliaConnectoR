% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/importing.R
\name{juliaImport}
\alias{juliaImport}
\title{Load and import a Julia package via \code{import} statement}
\usage{
juliaImport(pkgName, alias = pkgName, importInternal = FALSE)
}
\arguments{
\item{pkgName}{name of the package/module that is to be used}

\item{alias}{alternative prefix for the package
(useful e.g. to avoid naming collisions or for brevity)}

\item{importInternal}{\code{logical} value, default \code{FALSE}.
Specifies whether unexported functions shall be imported.}
}
\value{
\code{NULL} on success
}
\description{
The specified package/module is loaded via \code{import} in Julia
and its functions are attached to the R search path.
This way, all functions (including constructors) exported by the
package are available in R under their name
prefixed with the module name plus "\code{.}", like in Julia.
}
\examples{
juliaImport("UUIDs")
juliaCall("string", UUIDs.uuid4())
\dontshow{
JuliaConnectoR:::stopJulia()
}
}
